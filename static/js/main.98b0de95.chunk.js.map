{"version":3,"sources":["Spotify_Logo_RGB_Green.png","Diagram.tsx","App.tsx","index.tsx"],"names":["Diagram","params","ref","createRef","data","script","actions","useEffect","current","margin","width","height","svg","d3","attr","append","scalePos","domain","range","scaleAt","e","at","nice","call","ticks","Math","min","tickFormat","d","line","x","y","pos","datum","getLocalStorageOrDefault","key","defaultValue","stored","localStorage","getItem","JSON","parse","App","useState","minDepth","maxDepth","speed","showStats","program","undefined","oidcSettings","automaticSilentRenew","authority","metadata","issuer","authorization_endpoint","token_endpoint","client_id","redirect_uri","window","location","protocol","host","pathname","post_logout_redirect_uri","silent_redirect_uri","response_type","scope","loadUserInfo","userStore","OIDC","WebStorageStateStore","store","UserManager","userManager","SpotifyWebApi","spotifyApi","user","setUser","playingTrack","setPlayingTrack","currentAnalysis","setCurrentAnalysis","currentFunscript","setCurrentFunscript","a","href","indexOf","signinRedirectCallback","origin","getUser","console","log","signinRedirect","setAccessToken","access_token","removeUser","reload","item","id","res","getAudioAnalysisForTrack","setItem","stringify","info","mapped","organize","featureKey","featureStored","featureRes","getAudioFeaturesForTrack","sections","flatMap","section","bars","bar","beats","map","beat","i","toMillisInt","start","inverted","version","seconds","ceil","analysis","within","outer","inner","duration","filter","sessionStorage","getMyCurrentPlayingTrack","state","work","reactOnLoginCallback","downloadFunscript","useCallback","json","blob","Blob","type","blobUrl","URL","createObjectURL","link","document","createElement","download","artists","name","body","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","removeChild","renderPercent","number","round","className","onClick","album","images","alt","src","url","danceability","acousticness","energy","liveness","tempo","spotifyLogo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98b0de95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spotify_Logo_RGB_Green.0c4ae91b.png\";","import React, {RefObject, createRef, useEffect} from \"react\";\r\nimport \"./Diagram.css\"\r\nimport * as d3 from \"d3\"\r\nimport {Funscript, FunscriptAction} from \"./Funscript\";\r\n\r\nconst Diagram = (params: {script: Funscript}) => {\r\n\r\n    const ref: RefObject<SVGSVGElement> = createRef()\r\n    const data = params.script.actions;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!ref.current) {\r\n            return;\r\n        }\r\n\r\n        var margin = {top: 10, right: 30, bottom: 30, left: 60},\r\n            width = 800 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        const svg = d3.select(ref.current!)\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            var scalePos = d3.scaleLinear()\r\n                .domain([0, 100])\r\n                .range([ height, 0 ]);\r\n            var scaleAt = d3.scaleLinear()\r\n                //.domain([Date.now(), Date.now() + 24 * 60 * 60 * 1000])\r\n                .domain([0, d3.max(data, e=>e.at)!])\r\n                .nice()\r\n                .range([ 0, width ]);\r\n\r\n            // Add X axis --> it is a date format\r\n            svg.append(\"g\")\r\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                .call(d3.axisBottom(scaleAt)\r\n                    .ticks(Math.min(scaleAt.domain()[1] / 1000, 50))\r\n                    .tickFormat((d) => `${(d as number) / 1000}s`)\r\n                );\r\n\r\n            // Add Y axis\r\n            svg.append(\"g\")\r\n                .call(d3.axisLeft(scalePos));\r\n\r\n            const line = d3.line<FunscriptAction>()\r\n                .x( d=> scaleAt(d.at) )\r\n                .y( d=> scalePos(d.pos));\r\n\r\n            // Add the line\r\n            svg.append(\"path\")\r\n                .datum(data)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"steelblue\")\r\n                .attr(\"stroke-width\", 1.5)\r\n                .attr(\"d\",  line);\r\n\r\n    }, [data, ref])\r\n    return (\r\n        <svg\r\n            ref={ref}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Diagram\r\n","import './App.css';\n\nimport {useCallback, useEffect, useState} from \"react\";\nimport OIDC, { UserManager, UserManagerSettings} from \"oidc-client\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport spotifyLogo from \"./Spotify_Logo_RGB_Green.png\"\nimport {AudioAnalysis, StructuredAudioAnalysis} from \"./Analysis\";\nimport Diagram from \"./Diagram\"\nimport {Funscript} from \"./Funscript\";\n\nfunction getLocalStorageOrDefault<T>(key:any, defaultValue: T): T {\n  const stored = localStorage.getItem(key);\n  if (!stored) {\n    return defaultValue;\n  }\n  return JSON.parse(stored) as T;\n}\n\n\nfunction App() {\n\n  const [params] = useState<{\n    minDepth: number,\n    maxDepth: number,\n    speed: number,\n    showStats: boolean,\n    program: 'palm' | 'pi' | undefined\n  }>(getLocalStorageOrDefault('params',{minDepth: 100, maxDepth: 5000, speed: 3000, showStats: false, program: undefined}));\n\n\n    const oidcSettings: UserManagerSettings = {\n        automaticSilentRenew: true,\n        authority: \"https://accounts.spotify.com/authorize\",\n        metadata: {\n            issuer: \"https://accounts.spotify.com/authorize\",\n            authorization_endpoint: \"https://accounts.spotify.com/authorize\",\n            token_endpoint: \"https://accounts.spotify.com/api/token\",\n        },\n        client_id: \"5cb73d286b4848c4a53a7b5077ae3cf4\",\n        redirect_uri: window.location.protocol + \"//\" + window.location.host + window.location.pathname,\n        post_logout_redirect_uri: window.location.protocol + \"//\" + window.location.host + \"/index\",\n        silent_redirect_uri: window.location.protocol + \"//\" + window.location.host + \"/index\",\n        response_type: \"code\",\n        scope: \"user-read-playback-state\",\n        loadUserInfo: true,\n        userStore: new OIDC.WebStorageStateStore({ store: window.localStorage }),\n\n    };\n\n    const [userManager] = useState<UserManager>(new UserManager(oidcSettings));\n\n    const [spotifyApi] = useState(new SpotifyWebApi());\n\n    const [user, setUser] = useState<{\n        access_token: string\n    } | undefined>(undefined);\n\n    const [playingTrack, setPlayingTrack] = useState<SpotifyApi.CurrentlyPlayingResponse | undefined>(undefined);\n\n\n    const [currentAnalysis, setCurrentAnalysis] = useState<[SpotifyApi.AudioFeaturesResponse, StructuredAudioAnalysis] | undefined>(undefined);\n\n    const [currentFunscript, setCurrentFunscript] = useState<Funscript | undefined>(undefined);\n\n\n\n/*\n  useEffect(() => {\n\n      const script = document.createElement(\"script\");\n      script.src = \"https://sdk.scdn.co/spotify-player.js\";\n      script.async = true;\n      //script.onload = () => this.scriptLoaded();\n      document.body.appendChild(script);\n\n      (window as any).onSpotifyWebPlaybackSDKReady = () => {\n          const token = 'BQA5NoUxZSR9tHtwy0oDLBKfn9eS36cc8nhPNxWnlKcBEayw-f6We1w7yBaObjQGKIee8p32z1x_wengBf2zkeS12r_2pA0j8dagbkK_qUIpQIykhAYnT6QGHmKqy4nXgvLU6HiYqJIf7kiIOGn8zXIo4167A1BVA1I7Pn4ogoPQCvYOSc4rel8';\n          const player = new (global as any).Spotify.Player({\n              name: 'Web Playback SDK Quick Start Player',\n              getOAuthToken: (cb:any ) => { cb(token); }\n          });\n\n          // Error handling\n          player.addListener('initialization_error', (e: any) => { console.error(e.message); });\n          player.addListener('authentication_error', (e: any) => { console.error(e.message); });\n          player.addListener('account_error', (e: any) => { console.error(e.message); });\n          player.addListener('playback_error', (e: any) => { console.error(e.message); });\n\n          // Playback status updates\n          player.addListener('player_state_changed', (state: any) => { console.log(state); });\n\n          // Ready\n          player.addListener('ready', (e: any) => {\n              console.log('Ready with Device ID', e.device_id);\n          });\n\n          // Not Ready\n          player.addListener('not_ready', (e: any) => {\n              console.log('Device ID has gone offline', e.device_id);\n          });\n\n          // Connect to the player!\n          player.connect();\n      };\n\n  })\n\n */\n\n  useEffect(() => {\n    sessionStorage.setItem('params', JSON.stringify(params));\n  }, [params]);\n\n    useEffect(() => {\n\n        async function work() {\n            if (user?.access_token) {\n                try {\n                    const state = await spotifyApi.getMyCurrentPlayingTrack();\n                    setPlayingTrack(state);\n\n                } catch (e) {\n                    console.log(\"failed to fetch current track\", e)\n                }\n\n            }\n        }\n        work();\n\n    }, [spotifyApi, userManager, user]);\n\n\n    //userManager.getUser().then((u)=> u ? setUser(u) : null);\n\n    async function reactOnLoginCallback() {\n        if (window.location.href.indexOf('code=') > 0) {\n            await userManager.signinRedirectCallback(window.location.href);\n            window.location.href = window.location.origin + window.location.pathname\n        }\n    }\n    reactOnLoginCallback();\n\n\n  async function login() {\n\n      const user = await userManager.getUser();\n      console.log()\n      if (user === null) {\n          await userManager.signinRedirect();\n      } else {\n          console.log(user);\n          spotifyApi.setAccessToken(user.access_token);\n          setUser({access_token: user.access_token})\n      }\n  }\n\n    async function logout() {\n\n        const user = await userManager.getUser();\n        if (user !== null) {\n            await userManager.removeUser();\n            window.location.reload();\n        }\n\n    }\n\n    async function analyze() {\n        const key = `track-${playingTrack!.item!.id}`;\n\n        const stored = getLocalStorageOrDefault(key, undefined);\n        let res;\n        if (stored) {\n            res = stored;\n        } else {\n            res = await spotifyApi.getAudioAnalysisForTrack(playingTrack!.item!.id);\n            localStorage.setItem(key, JSON.stringify(res))\n        }\n        console.info(\"RESULT:\", res)\n        const analysisResult = res as AudioAnalysis;\n        const mapped = organize(analysisResult);\n\n        const featureKey = `track-features--${playingTrack!.item!.id}`;\n        const featureStored = getLocalStorageOrDefault<SpotifyApi.AudioFeaturesResponse | undefined>(featureKey, undefined);\n        let featureRes: SpotifyApi.AudioFeaturesResponse;\n        if (featureStored) {\n            featureRes = featureStored;\n        } else {\n            featureRes = await spotifyApi.getAudioFeaturesForTrack(playingTrack!.item!.id);\n            localStorage.setItem(featureKey, JSON.stringify(featureRes))\n        }\n\n        setCurrentAnalysis([featureRes, mapped])\n\n        const actions = mapped.sections.flatMap(section => section.bars.flatMap(bar => bar.beats.map((beat, i) => ({\n            at: toMillisInt(beat.start),\n            pos: (i % 2 === 0) ? 90 : 0\n        }))))\n        const funscript: Funscript = { actions, inverted: false, range: 90, version: \"1.0\"}\n        setCurrentFunscript(funscript);\n\n        console.info(\"mapped result: \", mapped)\n\n    }\n\n    function toMillisInt(seconds: number) {\n      return Math.ceil(seconds * 1000.0)\n    }\n\n\n    function organize(analysis: AudioAnalysis) : StructuredAudioAnalysis {\n        function within(outer: { start: number, duration: number }, inner: { start: number, duration: number }): boolean {\n            return inner.start >= outer.start && inner.start + inner.duration <= outer.start + outer.duration\n        }\n\n        return {...analysis, sections: analysis.sections.map(section => (\n                {\n                    ...section,\n                    bars: analysis.bars\n                        .filter(bar => within(section, bar))\n                        .map(bar =>\n                            ({\n                                ...bar,\n                                beats: analysis.beats\n                                    .filter(beat => within(bar, beat))\n\n                            }))\n                }))}\n    }\n\n    const downloadFunscript = useCallback(() => {\n\n        const json = JSON.stringify(currentFunscript, ['version', 'inverted', 'range', 'actions', 'pos', 'at'], 2);\n        var blob = new Blob([json], {type: \"application/json\"});\n        const blobUrl = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = blobUrl;\n        link.download = `${playingTrack?.item?.artists[0]!.name} - ${playingTrack?.item?.name}.json`;\n        document.body.appendChild(link);\n        link.dispatchEvent(\n            new MouseEvent('click', {\n                bubbles: true,\n                cancelable: true,\n                view: window\n            })\n        );\n        document.body.removeChild(link);\n\n    }, [currentFunscript, playingTrack])\n\n    function renderPercent(number: number) : string {\n      return `${Math.round(number * 100)}%`\n    }\n\n  return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n\n            {!user?.access_token &&\n            <div>\n                <p>\n                    This tool can create FunScript files for the music you are playing on spotify.\n                    FunScripts are instructions for haptic human interaction feedback devices.\n                </p>\n                <p>\n                    FunScripts can be played back with the <a href=\"https://github.com/FredTungsten/ScriptPlayer\">ScriptPlayer</a> or\n                </p>\n\n\n\n                <p>Hit <code>Login with Spotify</code> to get started.</p>\n                <button onClick={login}>Login with Spotify</button>\n            </div>\n            }\n\n            {\n                !playingTrack &&\n                    <div>\n                        <p>Time to choose a song! Use a Spotify device of your choice and start playback. Then reload this page.</p>\n                    </div>\n            }\n            {\n                playingTrack &&\n                <div>\n                    Playing now:\n\n                    {\n                        playingTrack.item?.album.images[0] &&\n                        <div><br /><img alt={\"Album cover\"} src={playingTrack.item?.album.images[0].url} width={playingTrack.item?.album.images[0].width} height={playingTrack.item?.album.images[0].height}/></div>\n                    }\n\n                    <br/><strong>{playingTrack.item?.name}</strong>\n                    <br/>by: {playingTrack.item?.artists[0]?.name}\n                    <br/>Album: {playingTrack.item?.album?.name}\n                    <br/><button onClick={analyze}>Analyze</button>\n\n\n                </div>\n            }\n\n            {\n                currentAnalysis &&\n                <div>\n                    <dl>\n                        <dt>Dancability: </dt><dd>{renderPercent(currentAnalysis[0].danceability)}</dd>\n                        <dt>Acousticness: </dt><dd>{renderPercent(currentAnalysis[0].acousticness)}</dd>\n                        <dt>Energy: </dt><dd>{renderPercent(currentAnalysis[0].energy)}</dd>\n                        <dt>Liveness: </dt><dd>{renderPercent(currentAnalysis[0].liveness)}</dd>\n                        <dt>Tempo: </dt><dd>{currentAnalysis[0].tempo} BPM</dd>\n                    </dl>\n                </div>\n            }\n\n            {\n                currentFunscript &&\n                <div>\n                    <Diagram script={currentFunscript}/>\n                    <br/>\n                    <button onClick={downloadFunscript}>Download Funscript</button>\n                </div>\n            }\n\n\n\n        </header>\n        <p>\n            This app is powered by\n            <br/>\n            <img width={128} src={spotifyLogo} alt=\"Spotify\" />  Audio Analysis\n        </p>\n        {user?.access_token &&\n        <p>\n            <button onClick={logout}>Logout</button>\n        </p>\n        }\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'github-fork-ribbon-css/gh-fork-ribbon.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\ndocument.getElementById('root')\n);"],"sourceRoot":""}